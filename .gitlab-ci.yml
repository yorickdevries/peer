image: node:14

variables:
  POSTGRES_DB: peer_database
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_HOST: postgres
  MYSQL_ROOT_PASSWORD: password
  MYSQL_DATABASE: peer
  MYSQL_USER: peer
  MYSQL_PASSWORD: password
  MYSQL_HOST: mariadb

stages:
    - static-analysis
    - build
    - test
    - coverage
    - migration
    - start
    - sast

server-lint:
  stage: static-analysis
  variables:
    NODE_ENV: development
  script:
  - cd server && npm install
  - npm run lint
  only:
  - merge_requests
  - pushes

client-lint:
  stage: static-analysis
  variables:
    NODE_ENV: development
  script:
  - cd client && npm install
  - npm run lint
  only:
  - merge_requests
  - pushes

build_server:
  stage: build
  variables:
    NODE_ENV: production
  script:
  - cd server && npm install
  - npm run build
  only:
  - merge_requests
  - pushes

build_client:
  stage: build
  variables:
    NODE_ENV: production
  script:
  - cd client && npm install
  - npm run build
  only:
  - merge_requests
  - pushes

test:
  stage: test
  variables:
    NODE_ENV: test
  script:
  - cd server && npm install
  - npm run test
  only:
  - merge_requests
  - pushes

coverage:
  stage: test
  variables:
    NODE_ENV: test
  allow_failure: true
  script:
  - cd server && npm install
  - npm run coverage
  only:
  - merge_requests
  - pushes

migration:
  stage: migration
  variables:
    NODE_ENV: production
  services:
  - mariadb:10.1
  script:
  - cd server && npm install
  - npm run build
  - npm run typeorm:migration:run
  only:
  - merge_requests
  - pushes

start_server:
  stage: start
  variables:
    NODE_ENV: production
  services:
  - mariadb:10.1
  script:
  - cd server && npm install
  - npm run build
  - timeout 30s npm run start || if [ $? -eq 124 ]; then (exit 0); else (exit 1); fi
  only:
  - merge_requests
  - pushes

start_server_old:
  stage: start
  variables:
    NODE_ENV: development
  services:
  - postgres:12
  - mariadb:10.1
  script:
  - cd server && npm install
  - npm run build
  - export NODE_ENV="development"
  - npm run data_init_old
  - timeout 30s npm run start || if [ $? -eq 124 ]; then (exit 0); else (exit 1); fi
  only:
  - merge_requests

sast:
  stage: sast
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    reports:
      sast: gl-sast-report.json
  only:
  - merge_requests
  - pushes

